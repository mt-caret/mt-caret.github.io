var data = {lines:[
{"lineNum":"    1","line":"use crate::utils::*;"},
{"lineNum":"    2","line":"use ocaml_interop::{DynBox, OCaml, OCamlList, OCamlRef, ToOCaml};"},
{"lineNum":"    3","line":"use polars::prelude::*;"},
{"lineNum":"    4","line":"use polars_ocaml_macros::ocaml_interop_export;"},
{"lineNum":"    5","line":"use polars_sql::SQLContext;"},
{"lineNum":"    6","line":"use std::cell::RefCell;"},
{"lineNum":"    7","line":"use std::rc::Rc;"},
{"lineNum":"    8","line":""},
{"lineNum":"    9","line":"type PolarsSQLContext = Rc<RefCell<SQLContext>>;"},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"#[ocaml_interop_export]","class":"lineCov","hits":"1","order":"1161",},
{"lineNum":"   12","line":"fn rust_sql_context_new("},
{"lineNum":"   13","line":"    cr: &mut &mut OCamlRuntime,"},
{"lineNum":"   14","line":"    unit: OCamlRef<()>,","class":"lineCov","hits":"1","order":"1154",},
{"lineNum":"   15","line":") -> OCaml<DynBox<PolarsSQLContext>> {"},
{"lineNum":"   16","line":"    let () = unit.to_rust(cr);","class":"lineCov","hits":"1","order":"1152",},
{"lineNum":"   17","line":"    OCaml::box_value(cr, Rc::new(RefCell::new(SQLContext::new())))","class":"lineCov","hits":"1","order":"1157",},
{"lineNum":"   18","line":"}"},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"#[ocaml_interop_export]","class":"lineCov","hits":"1","order":"1159",},
{"lineNum":"   21","line":"fn rust_sql_context_get_tables("},
{"lineNum":"   22","line":"    cr: &mut &mut OCamlRuntime,"},
{"lineNum":"   23","line":"    sql_context: OCamlRef<DynBox<PolarsSQLContext>>,","class":"lineCov","hits":"1","order":"1151",},
{"lineNum":"   24","line":") -> OCaml<OCamlList<String>> {"},
{"lineNum":"   25","line":"    let Abstract(sql_context) = sql_context.to_rust(cr);","class":"lineCov","hits":"1","order":"1150",},
{"lineNum":"   26","line":"    let tables = sql_context.borrow().get_tables();","class":"lineCov","hits":"1","order":"1148",},
{"lineNum":"   27","line":"    tables.to_ocaml(cr)","class":"lineCov","hits":"1","order":"1153",},
{"lineNum":"   28","line":"}","class":"lineCov","hits":"1","order":"1149",},
{"lineNum":"   29","line":""},
{"lineNum":"   30","line":"#[ocaml_interop_export]","class":"lineCov","hits":"1","order":"1158",},
{"lineNum":"   31","line":"fn rust_sql_context_register("},
{"lineNum":"   32","line":"    cr: &mut &mut OCamlRuntime,","class":"lineCov","hits":"1","order":"1162",},
{"lineNum":"   33","line":"    sql_context: OCamlRef<DynBox<PolarsSQLContext>>,","class":"lineCov","hits":"1","order":"1163",},
{"lineNum":"   34","line":"    name: OCamlRef<String>,","class":"lineCov","hits":"1","order":"1164",},
{"lineNum":"   35","line":"    lf: OCamlRef<DynBox<LazyFrame>>,","class":"lineCov","hits":"1","order":"1165",},
{"lineNum":"   36","line":") -> OCaml<()> {"},
{"lineNum":"   37","line":"    let Abstract(sql_context) = sql_context.to_rust(cr);","class":"lineCov","hits":"1","order":"1166",},
{"lineNum":"   38","line":"    let name: String = name.to_rust(cr);","class":"lineCov","hits":"1","order":"1167",},
{"lineNum":"   39","line":"    let Abstract(lf) = lf.to_rust(cr);","class":"lineCov","hits":"1","order":"1169",},
{"lineNum":"   40","line":""},
{"lineNum":"   41","line":"    sql_context.borrow_mut().register(&name, lf);","class":"lineCov","hits":"1","order":"1170",},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"    OCaml::unit()","class":"lineCov","hits":"1","order":"1155",},
{"lineNum":"   44","line":"}","class":"lineCov","hits":"1","order":"1168",},
{"lineNum":"   45","line":""},
{"lineNum":"   46","line":"#[ocaml_interop_export]","class":"lineNoCov","hits":"0",},
{"lineNum":"   47","line":"fn rust_sql_context_unregister("},
{"lineNum":"   48","line":"    cr: &mut &mut OCamlRuntime,"},
{"lineNum":"   49","line":"    sql_context: OCamlRef<DynBox<PolarsSQLContext>>,","class":"lineNoCov","hits":"0",},
{"lineNum":"   50","line":"    name: OCamlRef<String>,","class":"lineNoCov","hits":"0",},
{"lineNum":"   51","line":") -> OCaml<()> {"},
{"lineNum":"   52","line":"    let Abstract(sql_context) = sql_context.to_rust(cr);","class":"lineNoCov","hits":"0",},
{"lineNum":"   53","line":"    let name: String = name.to_rust(cr);","class":"lineNoCov","hits":"0",},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"    sql_context.borrow_mut().unregister(&name);","class":"lineNoCov","hits":"0",},
{"lineNum":"   56","line":""},
{"lineNum":"   57","line":"    OCaml::unit()","class":"lineNoCov","hits":"0",},
{"lineNum":"   58","line":"}","class":"lineNoCov","hits":"0",},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"#[ocaml_interop_export]","class":"lineCov","hits":"1","order":"1156",},
{"lineNum":"   61","line":"fn rust_sql_context_execute("},
{"lineNum":"   62","line":"    cr: &mut &mut OCamlRuntime,"},
{"lineNum":"   63","line":"    sql_context: OCamlRef<DynBox<PolarsSQLContext>>,","class":"lineCov","hits":"1","order":"1147",},
{"lineNum":"   64","line":"    query: OCamlRef<String>,","class":"lineCov","hits":"1","order":"1146",},
{"lineNum":"   65","line":") -> OCaml<Result<DynBox<LazyFrame>, String>> {"},
{"lineNum":"   66","line":"    let query: String = query.to_rust(cr);","class":"lineCov","hits":"1","order":"1145",},
{"lineNum":"   67","line":""},
{"lineNum":"   68","line":"    dyn_box_result!(cr, |sql_context| {","class":"lineCov","hits":"1","order":"1144",},
{"lineNum":"   69","line":"        let result = sql_context.borrow_mut().execute(&query);","class":"lineCov","hits":"1","order":"1143",},
{"lineNum":"   70","line":"        result","class":"lineCov","hits":"1","order":"1160",},
{"lineNum":"   71","line":"    })","class":"lineNoCov","hits":"0",},
{"lineNum":"   72","line":"}","class":"lineNoCov","hits":"0",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "", "date" : "2023-09-23 10:46:05", "instrumented" : 38, "covered" : 28,};
var merged_data = [];
