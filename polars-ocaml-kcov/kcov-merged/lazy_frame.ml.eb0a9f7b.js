var data = {lines:[
{"lineNum":"    1","line":"open! Core","class":"lineCov","hits":"1","order":"126",},
{"lineNum":"    2","line":""},
{"lineNum":"    3","line":"type t"},
{"lineNum":"    4","line":""},
{"lineNum":"    5","line":"external scan_parquet : string -> (t, string) result = \"rust_lazy_frame_scan_parquet\""},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"let scan_parquet_exn path = scan_parquet path |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1133",},
{"lineNum":"    8","line":""},
{"lineNum":"    9","line":"external scan_csv : string -> (t, string) result = \"rust_lazy_frame_scan_csv\""},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"let scan_csv_exn path = scan_csv path |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1141",},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"external scan_jsonl : string -> (t, string) result = \"rust_lazy_frame_scan_jsonl\""},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"let scan_jsonl_exn path = scan_jsonl path |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1136",},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"external explain"},
{"lineNum":"   18","line":"  :  t"},
{"lineNum":"   19","line":"  -> optimized:bool"},
{"lineNum":"   20","line":"  -> (string, string) result"},
{"lineNum":"   21","line":"  = \"rust_lazy_frame_explain\""},
{"lineNum":"   22","line":""},
{"lineNum":"   23","line":"let explain ?(optimized = true) t = explain t ~optimized","class":"lineNoCov","hits":"0",},
{"lineNum":"   24","line":"let explain_exn ?optimized t = explain ?optimized t |> Utils.string_result_ok_exn","class":"lineNoCov","hits":"0",},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"external to_dot"},
{"lineNum":"   27","line":"  :  t"},
{"lineNum":"   28","line":"  -> optimized:bool"},
{"lineNum":"   29","line":"  -> (string, string) result"},
{"lineNum":"   30","line":"  = \"rust_lazy_frame_to_dot\""},
{"lineNum":"   31","line":""},
{"lineNum":"   32","line":"let to_dot ?(optimized = true) t = to_dot t ~optimized","class":"lineNoCov","hits":"0",},
{"lineNum":"   33","line":"let to_dot_exn ?optimized t = to_dot ?optimized t |> Utils.string_result_ok_exn","class":"lineNoCov","hits":"0",},
{"lineNum":"   34","line":""},
{"lineNum":"   35","line":"external cache : t -> t = \"rust_lazy_frame_cache\""},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":"external collect"},
{"lineNum":"   38","line":"  :  t"},
{"lineNum":"   39","line":"  -> streaming:bool"},
{"lineNum":"   40","line":"  -> (Data_frame0.t, string) result"},
{"lineNum":"   41","line":"  = \"rust_lazy_frame_collect\""},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"let collect ?(streaming = false) t = collect t ~streaming","class":"lineCov","hits":"1","order":"1137",},
{"lineNum":"   44","line":"let collect_exn ?streaming t = collect ?streaming t |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1135",},
{"lineNum":"   45","line":""},
{"lineNum":"   46","line":"external collect_all"},
{"lineNum":"   47","line":"  :  t list"},
{"lineNum":"   48","line":"  -> (Data_frame0.t list, string) result"},
{"lineNum":"   49","line":"  = \"rust_lazy_frame_collect_all\""},
{"lineNum":"   50","line":""},
{"lineNum":"   51","line":"let collect_all_exn ts = collect_all ts |> Utils.string_result_ok_exn","class":"lineNoCov","hits":"0",},
{"lineNum":"   52","line":""},
{"lineNum":"   53","line":"external profile"},
{"lineNum":"   54","line":"  :  t"},
{"lineNum":"   55","line":"  -> (Data_frame0.t * Data_frame0.t, string) result"},
{"lineNum":"   56","line":"  = \"rust_lazy_frame_profile\""},
{"lineNum":"   57","line":""},
{"lineNum":"   58","line":"type profile_result ="},
{"lineNum":"   59","line":"  { collected : Data_frame0.t"},
{"lineNum":"   60","line":"  ; profile : Data_frame0.t"},
{"lineNum":"   61","line":"  }"},
{"lineNum":"   62","line":""},
{"lineNum":"   63","line":"let profile t =","class":"lineCov","hits":"1","order":"1139",},
{"lineNum":"   64","line":"  let%map.Result collected, profile = profile t in","class":"lineCov","hits":"1","order":"1134",},
{"lineNum":"   65","line":"  { collected; profile }","class":"lineCov","hits":"1","order":"1132",},
{"lineNum":"   66","line":";;"},
{"lineNum":"   67","line":""},
{"lineNum":"   68","line":"let profile_exn t = profile t |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1142",},
{"lineNum":"   69","line":""},
{"lineNum":"   70","line":"external fetch"},
{"lineNum":"   71","line":"  :  t"},
{"lineNum":"   72","line":"  -> n_rows:int"},
{"lineNum":"   73","line":"  -> (Data_frame0.t, string) result"},
{"lineNum":"   74","line":"  = \"rust_lazy_frame_fetch\""},
{"lineNum":"   75","line":""},
{"lineNum":"   76","line":"let fetch_exn t ~n_rows = fetch t ~n_rows |> Utils.string_result_ok_exn","class":"lineNoCov","hits":"0",},
{"lineNum":"   77","line":""},
{"lineNum":"   78","line":"external filter : t -> predicate:Expr.t -> t = \"rust_lazy_frame_filter\""},
{"lineNum":"   79","line":"external select : t -> exprs:Expr.t list -> t = \"rust_lazy_frame_select\""},
{"lineNum":"   80","line":"external with_columns : t -> exprs:Expr.t list -> t = \"rust_lazy_frame_with_columns\""},
{"lineNum":"   81","line":""},
{"lineNum":"   82","line":"external groupby"},
{"lineNum":"   83","line":"  :  t"},
{"lineNum":"   84","line":"  -> is_stable:bool"},
{"lineNum":"   85","line":"  -> by:Expr.t list"},
{"lineNum":"   86","line":"  -> agg:Expr.t list"},
{"lineNum":"   87","line":"  -> t"},
{"lineNum":"   88","line":"  = \"rust_lazy_frame_groupby\""},
{"lineNum":"   89","line":""},
{"lineNum":"   90","line":"let groupby ?(is_stable = true) t ~by ~agg = groupby t ~is_stable ~by ~agg","class":"lineCov","hits":"1","order":"1138",},
{"lineNum":"   91","line":""},
{"lineNum":"   92","line":"external groupby_dynamic"},
{"lineNum":"   93","line":"  :  t"},
{"lineNum":"   94","line":"  -> index_column:Expr.t"},
{"lineNum":"   95","line":"  -> by:Expr.t list"},
{"lineNum":"   96","line":"  -> every:string option"},
{"lineNum":"   97","line":"  -> period:string option"},
{"lineNum":"   98","line":"  -> offset:string option"},
{"lineNum":"   99","line":"  -> truncate:bool option"},
{"lineNum":"  100","line":"  -> include_boundaries:bool option"},
{"lineNum":"  101","line":"  -> closed_window:[ `Left | `Right | `Both | `None_ ] option"},
{"lineNum":"  102","line":"  -> start_by:"},
{"lineNum":"  103","line":"       [ `Window_bound"},
{"lineNum":"  104","line":"       | `Data_point"},
{"lineNum":"  105","line":"       | `Monday"},
{"lineNum":"  106","line":"       | `Tuesday"},
{"lineNum":"  107","line":"       | `Wednesday"},
{"lineNum":"  108","line":"       | `Thursday"},
{"lineNum":"  109","line":"       | `Friday"},
{"lineNum":"  110","line":"       | `Saturday"},
{"lineNum":"  111","line":"       | `Sunday"},
{"lineNum":"  112","line":"       ]"},
{"lineNum":"  113","line":"       option"},
{"lineNum":"  114","line":"  -> check_sorted:bool option"},
{"lineNum":"  115","line":"  -> agg:Expr.t list"},
{"lineNum":"  116","line":"  -> t"},
{"lineNum":"  117","line":"  = \"rust_lazy_frame_groupby_dynamic_bytecode\" \"rust_lazy_frame_groupby_dynamic\""},
{"lineNum":"  118","line":""},
{"lineNum":"  119","line":"let groupby_dynamic"},
{"lineNum":"  120","line":"  ?every","class":"lineNoCov","hits":"0",},
{"lineNum":"  121","line":"  ?period"},
{"lineNum":"  122","line":"  ?offset"},
{"lineNum":"  123","line":"  ?truncate"},
{"lineNum":"  124","line":"  ?include_boundaries"},
{"lineNum":"  125","line":"  ?closed_window"},
{"lineNum":"  126","line":"  ?start_by"},
{"lineNum":"  127","line":"  ?check_sorted"},
{"lineNum":"  128","line":"  t"},
{"lineNum":"  129","line":"  ~index_column"},
{"lineNum":"  130","line":"  ~by"},
{"lineNum":"  131","line":"  ~agg"},
{"lineNum":"  132","line":"  ="},
{"lineNum":"  133","line":"  (* Following the logic of:"},
{"lineNum":"  134","line":"     https://github.com/pola-rs/polars/blob/a8489558008652fe06e182dbdf082e8d9f0159ab/py-polars/polars/lazyframe/frame.py#L2327"},
{"lineNum":"  135","line":"  *)"},
{"lineNum":"  136","line":"  let offset ="},
{"lineNum":"  137","line":"    Option.value"},
{"lineNum":"  138","line":"      offset"},
{"lineNum":"  139","line":"      ~default:"},
{"lineNum":"  140","line":"        (match period with"},
{"lineNum":"  141","line":"         | None -> \"-\" ^ Option.value_exn every","class":"lineNoCov","hits":"0",},
{"lineNum":"  142","line":"         | Some _ -> \"0ns\")"},
{"lineNum":"  143","line":"  in"},
{"lineNum":"  144","line":"  let period = Option.value period ~default:(Option.value_exn every) in","class":"lineNoCov","hits":"0",},
{"lineNum":"  145","line":"  groupby_dynamic","class":"lineNoCov","hits":"0",},
{"lineNum":"  146","line":"    t"},
{"lineNum":"  147","line":"    ~index_column"},
{"lineNum":"  148","line":"    ~by"},
{"lineNum":"  149","line":"    ~every"},
{"lineNum":"  150","line":"    ~period:(Some period)","class":"lineNoCov","hits":"0",},
{"lineNum":"  151","line":"    ~offset:(Some offset)","class":"lineNoCov","hits":"0",},
{"lineNum":"  152","line":"    ~truncate"},
{"lineNum":"  153","line":"    ~include_boundaries"},
{"lineNum":"  154","line":"    ~closed_window"},
{"lineNum":"  155","line":"    ~start_by"},
{"lineNum":"  156","line":"    ~check_sorted"},
{"lineNum":"  157","line":"    ~agg"},
{"lineNum":"  158","line":";;"},
{"lineNum":"  159","line":""},
{"lineNum":"  160","line":"external join_"},
{"lineNum":"  161","line":"  :  t"},
{"lineNum":"  162","line":"  -> other:t"},
{"lineNum":"  163","line":"  -> left_on:Expr.t list"},
{"lineNum":"  164","line":"  -> right_on:Expr.t list"},
{"lineNum":"  165","line":"  -> how:Join_type.t"},
{"lineNum":"  166","line":"  -> t"},
{"lineNum":"  167","line":"  = \"rust_lazy_frame_join\""},
{"lineNum":"  168","line":""},
{"lineNum":"  169","line":"let join t ~other ~on ~how = join_ t ~other ~left_on:on ~right_on:on ~how","class":"lineCov","hits":"1","order":"1140",},
{"lineNum":"  170","line":"let join\' = join_","class":"lineCov","hits":"1","order":"1772",},
{"lineNum":"  171","line":""},
{"lineNum":"  172","line":"external vertical_concat"},
{"lineNum":"  173","line":"  :  t list"},
{"lineNum":"  174","line":"  -> rechunk:bool"},
{"lineNum":"  175","line":"  -> parallel:bool"},
{"lineNum":"  176","line":"  -> to_supertypes:bool"},
{"lineNum":"  177","line":"  -> t"},
{"lineNum":"  178","line":"  = \"rust_lazy_frame_vertical_concat\""},
{"lineNum":"  179","line":""},
{"lineNum":"  180","line":"external diagonal_concat"},
{"lineNum":"  181","line":"  :  t list"},
{"lineNum":"  182","line":"  -> rechunk:bool"},
{"lineNum":"  183","line":"  -> parallel:bool"},
{"lineNum":"  184","line":"  -> t"},
{"lineNum":"  185","line":"  = \"rust_lazy_frame_diagonal_concat\""},
{"lineNum":"  186","line":""},
{"lineNum":"  187","line":"let concat ?(how = `Vertical) ?(rechunk = false) ?(parallel = false) ts =","class":"lineNoCov","hits":"0",},
{"lineNum":"  188","line":"  match how with"},
{"lineNum":"  189","line":"  | `Vertical -> vertical_concat ts ~rechunk ~parallel ~to_supertypes:false","class":"lineNoCov","hits":"0",},
{"lineNum":"  190","line":"  | `Vertical_relaxed -> vertical_concat ts ~rechunk ~parallel ~to_supertypes:true","class":"lineNoCov","hits":"0",},
{"lineNum":"  191","line":"  | `Diagonal -> diagonal_concat ts ~rechunk ~parallel","class":"lineNoCov","hits":"0",},
{"lineNum":"  192","line":";;"},
{"lineNum":"  193","line":""},
{"lineNum":"  194","line":"external melt"},
{"lineNum":"  195","line":"  :  t"},
{"lineNum":"  196","line":"  -> id_vars:string list"},
{"lineNum":"  197","line":"  -> value_vars:string list"},
{"lineNum":"  198","line":"  -> variable_name:string option"},
{"lineNum":"  199","line":"  -> value_name:string option"},
{"lineNum":"  200","line":"  -> streamable:bool"},
{"lineNum":"  201","line":"  -> t"},
{"lineNum":"  202","line":"  = \"rust_lazy_frame_melt_bytecode\" \"rust_lazy_frame_melt\""},
{"lineNum":"  203","line":""},
{"lineNum":"  204","line":"let melt ?variable_name ?value_name ?(streamable = false) t ~id_vars ~value_vars =","class":"lineNoCov","hits":"0",},
{"lineNum":"  205","line":"  melt t ~id_vars ~value_vars ~variable_name ~value_name ~streamable","class":"lineNoCov","hits":"0",},
{"lineNum":"  206","line":";;"},
{"lineNum":"  207","line":""},
{"lineNum":"  208","line":"external sort"},
{"lineNum":"  209","line":"  :  t"},
{"lineNum":"  210","line":"  -> by_column:string"},
{"lineNum":"  211","line":"  -> descending:bool option"},
{"lineNum":"  212","line":"  -> nulls_last:bool option"},
{"lineNum":"  213","line":"  -> multithreaded:bool option"},
{"lineNum":"  214","line":"  -> maintain_order:bool option"},
{"lineNum":"  215","line":"  -> t"},
{"lineNum":"  216","line":"  = \"rust_lazy_frame_sort_bytecode\" \"rust_lazy_frame_sort\""},
{"lineNum":"  217","line":""},
{"lineNum":"  218","line":"let sort ?descending ?nulls_last t ~by_column =","class":"lineCov","hits":"1","order":"1131",},
{"lineNum":"  219","line":"  sort","class":"lineCov","hits":"1","order":"1130",},
{"lineNum":"  220","line":"    t"},
{"lineNum":"  221","line":"    ~by_column"},
{"lineNum":"  222","line":"    ~descending"},
{"lineNum":"  223","line":"    ~nulls_last (* TODO: make following parameters configurable *)"},
{"lineNum":"  224","line":"    ~multithreaded:(Some false)"},
{"lineNum":"  225","line":"    ~maintain_order:(Some true)"},
{"lineNum":"  226","line":";;"},
{"lineNum":"  227","line":""},
{"lineNum":"  228","line":"external limit : t -> n:int -> t = \"rust_lazy_frame_limit\""},
{"lineNum":"  229","line":"external explode : t -> columns:Expr.t list -> t = \"rust_lazy_frame_explode\""},
{"lineNum":"  230","line":"external with_streaming : t -> toggle:bool -> t = \"rust_lazy_frame_with_streaming\""},
{"lineNum":"  231","line":"external schema : t -> (Schema.t, string) result = \"rust_lazy_frame_schema\""},
{"lineNum":"  232","line":""},
{"lineNum":"  233","line":"let schema_exn t = schema t |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"127",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "", "date" : "2023-09-23 10:46:05", "instrumented" : 34, "covered" : 16,};
var merged_data = [];
