var data = {lines:[
{"lineNum":"    1","line":"open! Core","class":"lineCov","hits":"1","order":"32",},
{"lineNum":"    2","line":"include Common_intf"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"module Make_numeric (T : Numeric_basic) = struct","class":"lineCov","hits":"1","order":"39",},
{"lineNum":"    5","line":"  include T","class":"lineCov","hits":"1","order":"34",},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"  let ( + ) = add"},
{"lineNum":"    8","line":"  let ( - ) = sub"},
{"lineNum":"    9","line":"  let ( * ) = mul"},
{"lineNum":"   10","line":"  let ( / ) = div"},
{"lineNum":"   11","line":"end"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"module Make_logic (T : Logic_basic) = struct","class":"lineCov","hits":"1","order":"38",},
{"lineNum":"   14","line":"  include T","class":"lineCov","hits":"1","order":"41",},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"  let ( ! ) = not"},
{"lineNum":"   17","line":"  let ( && ) = and_"},
{"lineNum":"   18","line":"  let ( || ) = or_"},
{"lineNum":"   19","line":"  let ( lxor ) = xor"},
{"lineNum":"   20","line":"end"},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"module Naive_date = struct","class":"lineCov","hits":"1","order":"36",},
{"lineNum":"   23","line":"  type t"},
{"lineNum":"   24","line":""},
{"lineNum":"   25","line":"  external create : year:int -> month:int -> day:int -> t option = \"rust_naive_date\""},
{"lineNum":"   26","line":""},
{"lineNum":"   27","line":"  let of_date date =","class":"lineCov","hits":"1","order":"876",},
{"lineNum":"   28","line":"    create","class":"lineCov","hits":"1","order":"874",},
{"lineNum":"   29","line":"      ~year:(Date.year date)"},
{"lineNum":"   30","line":"      ~month:(Date.month date |> Month.to_int)","class":"lineCov","hits":"1","order":"881",},
{"lineNum":"   31","line":"      ~day:(Date.day date)"},
{"lineNum":"   32","line":"    |> Option.value_exn"},
{"lineNum":"   33","line":"         ~here:[%here]"},
{"lineNum":"   34","line":"         ~error:(Error.create_s [%message \"Unexpected invalid date\" (date : Date.t)])","class":"lineCov","hits":"1","order":"873",},
{"lineNum":"   35","line":"  ;;"},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":"  let of_string str = Date.of_string str |> of_date","class":"lineCov","hits":"1","order":"872",},
{"lineNum":"   38","line":"end"},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":"module Naive_datetime = struct","class":"lineCov","hits":"1","order":"35",},
{"lineNum":"   41","line":"  type t"},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"  external of_naive_date"},
{"lineNum":"   44","line":"    :  Naive_date.t"},
{"lineNum":"   45","line":"    -> hour:int option"},
{"lineNum":"   46","line":"    -> min:int option"},
{"lineNum":"   47","line":"    -> sec:int option"},
{"lineNum":"   48","line":"    -> t option"},
{"lineNum":"   49","line":"    = \"rust_naive_date_to_naive_datetime\""},
{"lineNum":"   50","line":""},
{"lineNum":"   51","line":"  let of_naive_date ?hour ?min ?sec naive_date =","class":"lineCov","hits":"1","order":"871",},
{"lineNum":"   52","line":"    of_naive_date naive_date ~hour ~min ~sec |> Option.value_exn ~here:[%here]","class":"lineCov","hits":"1","order":"878",},
{"lineNum":"   53","line":"  ;;"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"  let of_date ?hour ?min ?sec date =","class":"lineCov","hits":"1","order":"882",},
{"lineNum":"   56","line":"    Naive_date.of_date date |> of_naive_date ?hour ?min ?sec","class":"lineCov","hits":"1","order":"877",},
{"lineNum":"   57","line":"  ;;"},
{"lineNum":"   58","line":""},
{"lineNum":"   59","line":"  external to_string : t -> string = \"rust_naive_datetime_to_string\""},
{"lineNum":"   60","line":""},
{"lineNum":"   61","line":"  let of_string str =","class":"lineCov","hits":"1","order":"883",},
{"lineNum":"   62","line":"    let naive_date, hour, min, sec =","class":"lineNoCov","hits":"0",},
{"lineNum":"   63","line":"      match String.split str ~on:\' \' with"},
{"lineNum":"   64","line":"      | [ date ] -> Naive_date.of_string date, None, None, None"},
{"lineNum":"   65","line":"      | [ date; time ] ->","class":"lineCov","hits":"1","order":"884",},
{"lineNum":"   66","line":"        let naive_date = Naive_date.of_string date in"},
{"lineNum":"   67","line":"        let hour, min, sec =","class":"lineNoCov","hits":"0",},
{"lineNum":"   68","line":"          match String.split time ~on:\':\' with"},
{"lineNum":"   69","line":"          | [ hour; min; sec ] ->","class":"lineCov","hits":"1","order":"875",},
{"lineNum":"   70","line":"            Some (Int.of_string hour), Some (Int.of_string min), Some (Int.of_string sec)","class":"lineCov","hits":"1","order":"885",},
{"lineNum":"   71","line":"          | [ hour; min ] -> Some (Int.of_string hour), Some (Int.of_string min), None","class":"lineCov","hits":"1","order":"880",},
{"lineNum":"   72","line":"          | [ hour ] -> Some (Int.of_string hour), None, None","class":"lineCov","hits":"1","order":"879",},
{"lineNum":"   73","line":"          | _ -> raise_s [%message \"Unexpected time format\" time]","class":"lineNoCov","hits":"0",},
{"lineNum":"   74","line":"        in"},
{"lineNum":"   75","line":"        naive_date, hour, min, sec"},
{"lineNum":"   76","line":"      | _ -> raise_s [%message \"Unexpected datetime format\" str]","class":"lineNoCov","hits":"0",},
{"lineNum":"   77","line":"    in"},
{"lineNum":"   78","line":"    of_naive_date naive_date ?hour ?min ?sec","class":"lineCov","hits":"1","order":"886",},
{"lineNum":"   79","line":"  ;;"},
{"lineNum":"   80","line":""},
{"lineNum":"   81","line":"  let%expect_test \"of_string\" =","class":"lineCov","hits":"1","order":"37",},
{"lineNum":"   82","line":"    let parse_and_print str = of_string str |> to_string |> print_endline in","class":"lineCov","hits":"1","order":"1243",},
{"lineNum":"   83","line":"    parse_and_print \"2023-01-02\";","class":"lineCov","hits":"1","order":"1252",},
{"lineNum":"   84","line":"    [%expect {| 2023-01-02 00:00:00 |}];","class":"lineCov","hits":"1","order":"1251",},
{"lineNum":"   85","line":"    parse_and_print \"2023-01-02 03:04:05\";","class":"lineCov","hits":"1","order":"1246",},
{"lineNum":"   86","line":"    [%expect {| 2023-01-02 03:04:05 |}];","class":"lineCov","hits":"1","order":"1249",},
{"lineNum":"   87","line":"    parse_and_print \"2023-01-02 03:04\";","class":"lineCov","hits":"1","order":"1248",},
{"lineNum":"   88","line":"    [%expect {| 2023-01-02 03:04:00 |}];","class":"lineCov","hits":"1","order":"1245",},
{"lineNum":"   89","line":"    parse_and_print \"2023-01-02 03\";","class":"lineCov","hits":"1","order":"1250",},
{"lineNum":"   90","line":"    [%expect {| 2023-01-02 03:00:00 |}]","class":"lineCov","hits":"1","order":"1244",},
{"lineNum":"   91","line":"  ;;"},
{"lineNum":"   92","line":""},
{"lineNum":"   93","line":"  external of_time_ns : Time_ns.t -> t option = \"rust_time_ns_to_naive_datetime\""},
{"lineNum":"   94","line":""},
{"lineNum":"   95","line":"  let of_time_ns_exn time_ns =","class":"lineCov","hits":"1","order":"1242",},
{"lineNum":"   96","line":"    of_time_ns time_ns","class":"lineCov","hits":"1","order":"1247",},
{"lineNum":"   97","line":"    |> Option.value_or_thunk ~default:(fun () ->","class":"lineCov","hits":"1","order":"1241",},
{"lineNum":"   98","line":"      raise_s [%message \"Invalid time\" (time_ns : Time_ns_unix.t)])","class":"lineNoCov","hits":"0",},
{"lineNum":"   99","line":"  ;;"},
{"lineNum":"  100","line":""},
{"lineNum":"  101","line":"  let%expect_test \"of_time_ns\" =","class":"lineCov","hits":"1","order":"33",},
{"lineNum":"  102","line":"    let time_ns = Time_ns_unix.of_string \"2023-01-02 03:04:05.678\" in","class":"lineCov","hits":"1","order":"1240",},
{"lineNum":"  103","line":"    of_time_ns_exn time_ns |> to_string |> print_endline;","class":"lineCov","hits":"1","order":"1239",},
{"lineNum":"  104","line":"    [%expect {| 2023-01-02 03:04:05.678 |}]","class":"lineCov","hits":"1","order":"1238",},
{"lineNum":"  105","line":"  ;;"},
{"lineNum":"  106","line":""},
{"lineNum":"  107","line":"  external to_timestamp_nanos : t -> int = \"rust_naive_datetime_to_timestamp_nanos\""},
{"lineNum":"  108","line":""},
{"lineNum":"  109","line":"  let to_time_ns t = to_timestamp_nanos t |> Time_ns.of_int_ns_since_epoch","class":"lineCov","hits":"1","order":"1567",},
{"lineNum":"  110","line":"end"},
{"lineNum":"  111","line":""},
{"lineNum":"  112","line":"external record_panic_backtraces : unit -> unit = \"rust_record_panic_backtraces\""},
{"lineNum":"  113","line":""},
{"lineNum":"  114","line":"module For_testing = struct","class":"lineCov","hits":"1","order":"40",},
{"lineNum":"  115","line":"  external panic : string -> unit = \"rust_test_panic\""},
{"lineNum":"  116","line":"  external clear_panic_hook : unit -> unit = \"rust_clear_panic_hook\""},
{"lineNum":"  117","line":"end","class":"lineCov","hits":"1","order":"31",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "", "date" : "2023-09-23 10:46:05", "instrumented" : 48, "covered" : 43,};
var merged_data = [];
