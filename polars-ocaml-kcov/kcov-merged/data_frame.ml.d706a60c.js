var data = {lines:[
{"lineNum":"    1","line":"open! Core","class":"lineCov","hits":"1","order":"45",},
{"lineNum":"    2","line":""},
{"lineNum":"    3","line":"type t = Data_frame0.t"},
{"lineNum":"    4","line":""},
{"lineNum":"    5","line":"external create : Series.t list -> (t, string) result = \"rust_data_frame_new\""},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"let create_exn series = create series |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1206",},
{"lineNum":"    8","line":""},
{"lineNum":"    9","line":"external read_csv"},
{"lineNum":"   10","line":"  :  string"},
{"lineNum":"   11","line":"  -> schema:Schema.t option"},
{"lineNum":"   12","line":"  -> try_parse_dates:bool option"},
{"lineNum":"   13","line":"  -> (t, string) result"},
{"lineNum":"   14","line":"  = \"rust_data_frame_read_csv\""},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"let read_csv ?schema ?try_parse_dates path = read_csv path ~schema ~try_parse_dates","class":"lineCov","hits":"1","order":"1189",},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"let read_csv_exn ?schema ?try_parse_dates path =","class":"lineCov","hits":"1","order":"1195",},
{"lineNum":"   19","line":"  read_csv ?schema ?try_parse_dates path |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1186",},
{"lineNum":"   20","line":";;"},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"external write_csv : t -> string -> (unit, string) result = \"rust_data_frame_write_csv\""},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"let write_csv_exn t path = write_csv t path |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1181",},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"external read_parquet : string -> (t, string) result = \"rust_data_frame_read_parquet\""},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"let read_parquet_exn path = read_parquet path |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1179",},
{"lineNum":"   29","line":""},
{"lineNum":"   30","line":"external write_parquet"},
{"lineNum":"   31","line":"  :  t"},
{"lineNum":"   32","line":"  -> string"},
{"lineNum":"   33","line":"  -> (unit, string) result"},
{"lineNum":"   34","line":"  = \"rust_data_frame_write_parquet\""},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"let write_parquet_exn t path = write_parquet t path |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1208",},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"external read_json : string -> (t, string) result = \"rust_data_frame_read_json\""},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":"let read_json_exn path = read_json path |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1192",},
{"lineNum":"   41","line":""},
{"lineNum":"   42","line":"external write_json : t -> string -> (unit, string) result = \"rust_data_frame_write_json\""},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"let write_json_exn t path = write_json t path |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1200",},
{"lineNum":"   45","line":""},
{"lineNum":"   46","line":"external read_jsonl : string -> (t, string) result = \"rust_data_frame_read_jsonl\""},
{"lineNum":"   47","line":""},
{"lineNum":"   48","line":"let read_jsonl_exn path = read_jsonl path |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1213",},
{"lineNum":"   49","line":""},
{"lineNum":"   50","line":"external write_jsonl"},
{"lineNum":"   51","line":"  :  t"},
{"lineNum":"   52","line":"  -> string"},
{"lineNum":"   53","line":"  -> (unit, string) result"},
{"lineNum":"   54","line":"  = \"rust_data_frame_write_jsonl\""},
{"lineNum":"   55","line":""},
{"lineNum":"   56","line":"let write_jsonl_exn t path = write_jsonl t path |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1204",},
{"lineNum":"   57","line":""},
{"lineNum":"   58","line":"external describe"},
{"lineNum":"   59","line":"  :  t"},
{"lineNum":"   60","line":"  -> percentiles:float list option"},
{"lineNum":"   61","line":"  -> (t, string) result"},
{"lineNum":"   62","line":"  = \"rust_data_frame_describe\""},
{"lineNum":"   63","line":""},
{"lineNum":"   64","line":"let describe ?percentiles t = describe t ~percentiles","class":"lineCov","hits":"1","order":"1205",},
{"lineNum":"   65","line":"let describe_exn ?percentiles t = describe ?percentiles t |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1209",},
{"lineNum":"   66","line":""},
{"lineNum":"   67","line":"external height : t -> int = \"rust_data_frame_height\""},
{"lineNum":"   68","line":"external lazy_ : t -> Lazy_frame.t = \"rust_data_frame_lazy\""},
{"lineNum":"   69","line":""},
{"lineNum":"   70","line":"let in_lazy t ~f = lazy_ t |> f |> Lazy_frame.collect","class":"lineCov","hits":"1","order":"1193",},
{"lineNum":"   71","line":"let in_lazy_exn t ~f = lazy_ t |> f |> Lazy_frame.collect_exn","class":"lineCov","hits":"1","order":"1219",},
{"lineNum":"   72","line":"let select t ~exprs = in_lazy t ~f:(Lazy_frame.select ~exprs)","class":"lineCov","hits":"1","order":"1191",},
{"lineNum":"   73","line":"let select_exn t ~exprs = in_lazy_exn t ~f:(Lazy_frame.select ~exprs)","class":"lineCov","hits":"1","order":"1199",},
{"lineNum":"   74","line":"let with_columns t ~exprs = in_lazy t ~f:(Lazy_frame.with_columns ~exprs)","class":"lineNoCov","hits":"0",},
{"lineNum":"   75","line":"let with_columns_exn t ~exprs = in_lazy_exn t ~f:(Lazy_frame.with_columns ~exprs)","class":"lineCov","hits":"1","order":"1188",},
{"lineNum":"   76","line":"let groupby ?is_stable t ~by ~agg = in_lazy t ~f:(Lazy_frame.groupby ?is_stable ~by ~agg)","class":"lineNoCov","hits":"0",},
{"lineNum":"   77","line":""},
{"lineNum":"   78","line":"let groupby_exn ?is_stable t ~by ~agg =","class":"lineCov","hits":"1","order":"1184",},
{"lineNum":"   79","line":"  in_lazy_exn t ~f:(Lazy_frame.groupby ?is_stable ~by ~agg)","class":"lineCov","hits":"1","order":"1182",},
{"lineNum":"   80","line":";;"},
{"lineNum":"   81","line":""},
{"lineNum":"   82","line":"let groupby_dynamic"},
{"lineNum":"   83","line":"  ?every","class":"lineNoCov","hits":"0",},
{"lineNum":"   84","line":"  ?period"},
{"lineNum":"   85","line":"  ?offset"},
{"lineNum":"   86","line":"  ?truncate"},
{"lineNum":"   87","line":"  ?include_boundaries"},
{"lineNum":"   88","line":"  ?closed_window"},
{"lineNum":"   89","line":"  ?start_by"},
{"lineNum":"   90","line":"  ?check_sorted"},
{"lineNum":"   91","line":"  t"},
{"lineNum":"   92","line":"  ~index_column"},
{"lineNum":"   93","line":"  ~by"},
{"lineNum":"   94","line":"  ~agg"},
{"lineNum":"   95","line":"  ="},
{"lineNum":"   96","line":"  in_lazy","class":"lineNoCov","hits":"0",},
{"lineNum":"   97","line":"    t"},
{"lineNum":"   98","line":"    ~f:"},
{"lineNum":"   99","line":"      (Lazy_frame.groupby_dynamic","class":"lineNoCov","hits":"0",},
{"lineNum":"  100","line":"         ?every"},
{"lineNum":"  101","line":"         ?period"},
{"lineNum":"  102","line":"         ?offset"},
{"lineNum":"  103","line":"         ?truncate"},
{"lineNum":"  104","line":"         ?include_boundaries"},
{"lineNum":"  105","line":"         ?closed_window"},
{"lineNum":"  106","line":"         ?start_by"},
{"lineNum":"  107","line":"         ?check_sorted"},
{"lineNum":"  108","line":"         ~index_column"},
{"lineNum":"  109","line":"         ~by"},
{"lineNum":"  110","line":"         ~agg)"},
{"lineNum":"  111","line":";;"},
{"lineNum":"  112","line":""},
{"lineNum":"  113","line":"let groupby_dynamic_exn"},
{"lineNum":"  114","line":"  ?every","class":"lineNoCov","hits":"0",},
{"lineNum":"  115","line":"  ?period"},
{"lineNum":"  116","line":"  ?offset"},
{"lineNum":"  117","line":"  ?truncate"},
{"lineNum":"  118","line":"  ?include_boundaries"},
{"lineNum":"  119","line":"  ?closed_window"},
{"lineNum":"  120","line":"  ?start_by"},
{"lineNum":"  121","line":"  ?check_sorted"},
{"lineNum":"  122","line":"  t"},
{"lineNum":"  123","line":"  ~index_column"},
{"lineNum":"  124","line":"  ~by"},
{"lineNum":"  125","line":"  ~agg"},
{"lineNum":"  126","line":"  ="},
{"lineNum":"  127","line":"  in_lazy_exn","class":"lineNoCov","hits":"0",},
{"lineNum":"  128","line":"    t"},
{"lineNum":"  129","line":"    ~f:"},
{"lineNum":"  130","line":"      (Lazy_frame.groupby_dynamic","class":"lineNoCov","hits":"0",},
{"lineNum":"  131","line":"         ?every"},
{"lineNum":"  132","line":"         ?period"},
{"lineNum":"  133","line":"         ?offset"},
{"lineNum":"  134","line":"         ?truncate"},
{"lineNum":"  135","line":"         ?include_boundaries"},
{"lineNum":"  136","line":"         ?closed_window"},
{"lineNum":"  137","line":"         ?start_by"},
{"lineNum":"  138","line":"         ?check_sorted"},
{"lineNum":"  139","line":"         ~index_column"},
{"lineNum":"  140","line":"         ~by"},
{"lineNum":"  141","line":"         ~agg)"},
{"lineNum":"  142","line":";;"},
{"lineNum":"  143","line":""},
{"lineNum":"  144","line":"external column : t -> name:string -> (Series.t, string) result = \"rust_data_frame_column\""},
{"lineNum":"  145","line":""},
{"lineNum":"  146","line":"let column_exn t ~name = column t ~name |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1185",},
{"lineNum":"  147","line":""},
{"lineNum":"  148","line":"external columns"},
{"lineNum":"  149","line":"  :  t"},
{"lineNum":"  150","line":"  -> names:string list"},
{"lineNum":"  151","line":"  -> (Series.t list, string) result"},
{"lineNum":"  152","line":"  = \"rust_data_frame_columns\""},
{"lineNum":"  153","line":""},
{"lineNum":"  154","line":"let columns_exn t ~names = columns t ~names |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1568",},
{"lineNum":"  155","line":""},
{"lineNum":"  156","line":"external get_column_names : t -> string list = \"rust_data_frame_get_column_names\""},
{"lineNum":"  157","line":""},
{"lineNum":"  158","line":"external vertical_concat"},
{"lineNum":"  159","line":"  :  t list"},
{"lineNum":"  160","line":"  -> (t, string) result"},
{"lineNum":"  161","line":"  = \"rust_data_frame_vertical_concat\""},
{"lineNum":"  162","line":""},
{"lineNum":"  163","line":"external horizontal_concat"},
{"lineNum":"  164","line":"  :  t list"},
{"lineNum":"  165","line":"  -> (t, string) result"},
{"lineNum":"  166","line":"  = \"rust_data_frame_horizontal_concat\""},
{"lineNum":"  167","line":""},
{"lineNum":"  168","line":"external diagonal_concat"},
{"lineNum":"  169","line":"  :  t list"},
{"lineNum":"  170","line":"  -> (t, string) result"},
{"lineNum":"  171","line":"  = \"rust_data_frame_diagonal_concat\""},
{"lineNum":"  172","line":""},
{"lineNum":"  173","line":"let concat ?(how = `Vertical) ts =","class":"lineCov","hits":"1","order":"1202",},
{"lineNum":"  174","line":"  match how with"},
{"lineNum":"  175","line":"  | `Vertical -> vertical_concat ts","class":"lineCov","hits":"1","order":"1214",},
{"lineNum":"  176","line":"  | `Horizontal -> horizontal_concat ts","class":"lineCov","hits":"1","order":"1215",},
{"lineNum":"  177","line":"  | `Diagonal -> diagonal_concat ts","class":"lineCov","hits":"1","order":"1211",},
{"lineNum":"  178","line":";;"},
{"lineNum":"  179","line":""},
{"lineNum":"  180","line":"let concat_exn ?how ts = concat ?how ts |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1216",},
{"lineNum":"  181","line":""},
{"lineNum":"  182","line":"external pivot"},
{"lineNum":"  183","line":"  :  t"},
{"lineNum":"  184","line":"  -> values:string list"},
{"lineNum":"  185","line":"  -> index:string list"},
{"lineNum":"  186","line":"  -> columns:string list"},
{"lineNum":"  187","line":"  -> sort_columns:bool"},
{"lineNum":"  188","line":"  -> agg_expr:Expr.t option"},
{"lineNum":"  189","line":"  -> separator:string option"},
{"lineNum":"  190","line":"  -> stable:bool"},
{"lineNum":"  191","line":"  -> (t, string) result"},
{"lineNum":"  192","line":"  = \"rust_data_frame_pivot_bytecode\" \"rust_data_frame_pivot\""},
{"lineNum":"  193","line":""},
{"lineNum":"  194","line":"let pivot"},
{"lineNum":"  195","line":"  ?agg_expr","class":"lineCov","hits":"1","order":"1197",},
{"lineNum":"  196","line":"  ?(sort_columns = false)","class":"lineNoCov","hits":"0",},
{"lineNum":"  197","line":"  ?separator"},
{"lineNum":"  198","line":"  ?(stable = true)","class":"lineNoCov","hits":"0",},
{"lineNum":"  199","line":"  t"},
{"lineNum":"  200","line":"  ~values"},
{"lineNum":"  201","line":"  ~index"},
{"lineNum":"  202","line":"  ~columns"},
{"lineNum":"  203","line":"  ="},
{"lineNum":"  204","line":"  let agg_expr ="},
{"lineNum":"  205","line":"    Option.map","class":"lineCov","hits":"1","order":"1183",},
{"lineNum":"  206","line":"      agg_expr"},
{"lineNum":"  207","line":"      ~f:"},
{"lineNum":"  208","line":"        Expr.("},
{"lineNum":"  209","line":"          function","class":"lineCov","hits":"1","order":"1221",},
{"lineNum":"  210","line":"          | `First -> element () |> first","class":"lineCov","hits":"1","order":"1222",},
{"lineNum":"  211","line":"          | `Sum -> element () |> sum","class":"lineNoCov","hits":"0",},
{"lineNum":"  212","line":"          | `Max -> element () |> max","class":"lineNoCov","hits":"0",},
{"lineNum":"  213","line":"          | `Min -> element () |> min","class":"lineNoCov","hits":"0",},
{"lineNum":"  214","line":"          | `Mean -> element () |> mean","class":"lineNoCov","hits":"0",},
{"lineNum":"  215","line":"          | `Median -> element () |> median","class":"lineNoCov","hits":"0",},
{"lineNum":"  216","line":"          | `Last -> element () |> last","class":"lineNoCov","hits":"0",},
{"lineNum":"  217","line":"          | `Count -> count_ ()","class":"lineNoCov","hits":"0",},
{"lineNum":"  218","line":"          | `Expr expr -> expr)","class":"lineNoCov","hits":"0",},
{"lineNum":"  219","line":"  in"},
{"lineNum":"  220","line":"  pivot t ~values ~index ~columns ~sort_columns ~agg_expr ~separator ~stable","class":"lineCov","hits":"1","order":"1218",},
{"lineNum":"  221","line":";;"},
{"lineNum":"  222","line":""},
{"lineNum":"  223","line":"let pivot_exn ?agg_expr ?sort_columns ?separator ?stable t ~values ~index ~columns =","class":"lineCov","hits":"1","order":"1223",},
{"lineNum":"  224","line":"  pivot ?agg_expr ?sort_columns ?separator ?stable t ~values ~index ~columns","class":"lineCov","hits":"1","order":"1224",},
{"lineNum":"  225","line":"  |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1201",},
{"lineNum":"  226","line":";;"},
{"lineNum":"  227","line":""},
{"lineNum":"  228","line":"external melt"},
{"lineNum":"  229","line":"  :  t"},
{"lineNum":"  230","line":"  -> id_vars:string list"},
{"lineNum":"  231","line":"  -> value_vars:string list"},
{"lineNum":"  232","line":"  -> variable_name:string option"},
{"lineNum":"  233","line":"  -> value_name:string option"},
{"lineNum":"  234","line":"  -> streamable:bool"},
{"lineNum":"  235","line":"  -> (t, string) result"},
{"lineNum":"  236","line":"  = \"rust_data_frame_melt_bytecode\" \"rust_data_frame_melt\""},
{"lineNum":"  237","line":""},
{"lineNum":"  238","line":"let melt ?variable_name ?value_name ?(streamable = false) t ~id_vars ~value_vars =","class":"lineCov","hits":"1","order":"1225",},
{"lineNum":"  239","line":"  melt t ~id_vars ~value_vars ~variable_name ~value_name ~streamable","class":"lineCov","hits":"1","order":"1217",},
{"lineNum":"  240","line":";;"},
{"lineNum":"  241","line":""},
{"lineNum":"  242","line":"let melt_exn ?variable_name ?value_name ?streamable t ~id_vars ~value_vars =","class":"lineCov","hits":"1","order":"1210",},
{"lineNum":"  243","line":"  melt ?variable_name ?value_name ?streamable t ~id_vars ~value_vars","class":"lineCov","hits":"1","order":"1207",},
{"lineNum":"  244","line":"  |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1226",},
{"lineNum":"  245","line":";;"},
{"lineNum":"  246","line":""},
{"lineNum":"  247","line":"external sort"},
{"lineNum":"  248","line":"  :  t"},
{"lineNum":"  249","line":"  -> by_column:string list"},
{"lineNum":"  250","line":"  -> descending:bool list"},
{"lineNum":"  251","line":"  -> maintain_order:bool"},
{"lineNum":"  252","line":"  -> (t, string) result"},
{"lineNum":"  253","line":"  = \"rust_data_frame_sort\""},
{"lineNum":"  254","line":""},
{"lineNum":"  255","line":"let sort ?descending ?(maintain_order = true) t ~by_column =","class":"lineNoCov","hits":"0",},
{"lineNum":"  256","line":"  let descending ="},
{"lineNum":"  257","line":"    Option.value descending ~default:(List.map by_column ~f:(Fn.const false))","class":"lineNoCov","hits":"0",},
{"lineNum":"  258","line":"  in"},
{"lineNum":"  259","line":"  sort t ~by_column ~descending ~maintain_order","class":"lineNoCov","hits":"0",},
{"lineNum":"  260","line":";;"},
{"lineNum":"  261","line":""},
{"lineNum":"  262","line":"let sort_exn ?descending ?maintain_order t ~by_column =","class":"lineNoCov","hits":"0",},
{"lineNum":"  263","line":"  sort ?descending ?maintain_order t ~by_column |> Utils.string_result_ok_exn","class":"lineNoCov","hits":"0",},
{"lineNum":"  264","line":";;"},
{"lineNum":"  265","line":""},
{"lineNum":"  266","line":"external head : t -> length:int option -> t = \"rust_data_frame_head\""},
{"lineNum":"  267","line":""},
{"lineNum":"  268","line":"let head ?length t = head t ~length","class":"lineCov","hits":"1","order":"1178",},
{"lineNum":"  269","line":""},
{"lineNum":"  270","line":"external tail : t -> length:int option -> t = \"rust_data_frame_tail\""},
{"lineNum":"  271","line":""},
{"lineNum":"  272","line":"let tail ?length t = tail t ~length","class":"lineCov","hits":"1","order":"1194",},
{"lineNum":"  273","line":""},
{"lineNum":"  274","line":"external sample_n"},
{"lineNum":"  275","line":"  :  t"},
{"lineNum":"  276","line":"  -> n:int"},
{"lineNum":"  277","line":"  -> with_replacement:bool"},
{"lineNum":"  278","line":"  -> shuffle:bool"},
{"lineNum":"  279","line":"  -> seed:int option"},
{"lineNum":"  280","line":"  -> (t, string) result"},
{"lineNum":"  281","line":"  = \"rust_data_frame_sample_n\""},
{"lineNum":"  282","line":""},
{"lineNum":"  283","line":"let sample_n ?seed t ~n ~with_replacement ~shuffle =","class":"lineNoCov","hits":"0",},
{"lineNum":"  284","line":"  sample_n t ~n ~with_replacement ~shuffle ~seed","class":"lineCov","hits":"1","order":"1177",},
{"lineNum":"  285","line":";;"},
{"lineNum":"  286","line":""},
{"lineNum":"  287","line":"let sample_n_exn ?seed t ~n ~with_replacement ~shuffle =","class":"lineCov","hits":"1","order":"1176",},
{"lineNum":"  288","line":"  sample_n ?seed t ~n ~with_replacement ~shuffle |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1175",},
{"lineNum":"  289","line":";;"},
{"lineNum":"  290","line":""},
{"lineNum":"  291","line":"external sum : t -> t = \"rust_data_frame_sum\""},
{"lineNum":"  292","line":"external mean : t -> t = \"rust_data_frame_mean\""},
{"lineNum":"  293","line":"external median : t -> t = \"rust_data_frame_median\""},
{"lineNum":"  294","line":"external null_count : t -> t = \"rust_data_frame_null_count\""},
{"lineNum":"  295","line":""},
{"lineNum":"  296","line":"external fill_null"},
{"lineNum":"  297","line":"  :  t"},
{"lineNum":"  298","line":"  -> strategy:Fill_null_strategy.t"},
{"lineNum":"  299","line":"  -> (t, string) result"},
{"lineNum":"  300","line":"  = \"rust_data_frame_fill_null_with_strategy\""},
{"lineNum":"  301","line":""},
{"lineNum":"  302","line":"let fill_null_exn t ~strategy = fill_null t ~strategy |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1212",},
{"lineNum":"  303","line":""},
{"lineNum":"  304","line":"external interpolate"},
{"lineNum":"  305","line":"  :  t"},
{"lineNum":"  306","line":"  -> method_:[ `Linear | `Nearest ]"},
{"lineNum":"  307","line":"  -> (t, string) result"},
{"lineNum":"  308","line":"  = \"rust_data_frame_interpolate\""},
{"lineNum":"  309","line":""},
{"lineNum":"  310","line":"let interpolate_exn t ~method_ = interpolate t ~method_ |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1203",},
{"lineNum":"  311","line":""},
{"lineNum":"  312","line":"external upsample"},
{"lineNum":"  313","line":"  :  t"},
{"lineNum":"  314","line":"  -> by:string list"},
{"lineNum":"  315","line":"  -> time_column:string"},
{"lineNum":"  316","line":"  -> every:string"},
{"lineNum":"  317","line":"  -> offset:string"},
{"lineNum":"  318","line":"  -> stable:bool"},
{"lineNum":"  319","line":"  -> (t, string) result"},
{"lineNum":"  320","line":"  = \"rust_data_frame_upsample_bytecode\" \"rust_data_frame_upsample\""},
{"lineNum":"  321","line":""},
{"lineNum":"  322","line":"let upsample ?(stable = true) t ~by ~time_column ~every ~offset =","class":"lineCov","hits":"1","order":"1196",},
{"lineNum":"  323","line":"  upsample t ~by ~time_column ~every ~offset ~stable","class":"lineCov","hits":"1","order":"1187",},
{"lineNum":"  324","line":";;"},
{"lineNum":"  325","line":""},
{"lineNum":"  326","line":"let upsample_exn ?stable t ~by ~time_column ~every ~offset =","class":"lineCov","hits":"1","order":"1190",},
{"lineNum":"  327","line":"  upsample ?stable t ~by ~time_column ~every ~offset |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1198",},
{"lineNum":"  328","line":";;"},
{"lineNum":"  329","line":""},
{"lineNum":"  330","line":"external explode"},
{"lineNum":"  331","line":"  :  t"},
{"lineNum":"  332","line":"  -> columns:string list"},
{"lineNum":"  333","line":"  -> (t, string) result"},
{"lineNum":"  334","line":"  = \"rust_data_frame_explode\""},
{"lineNum":"  335","line":""},
{"lineNum":"  336","line":"let explode_exn t ~columns = explode t ~columns |> Utils.string_result_ok_exn","class":"lineCov","hits":"1","order":"1220",},
{"lineNum":"  337","line":""},
{"lineNum":"  338","line":"external schema : t -> Schema.t = \"rust_data_frame_schema\""},
{"lineNum":"  339","line":"external to_string_hum : t -> string = \"rust_data_frame_to_string_hum\""},
{"lineNum":"  340","line":""},
{"lineNum":"  341","line":"let print t = print_endline (to_string_hum t)","class":"lineCov","hits":"1","order":"1180",},
{"lineNum":"  342","line":"let pp formatter t = Stdlib.Format.pp_print_string formatter (to_string_hum t)","class":"lineCov","hits":"1","order":"46",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "", "date" : "2023-09-23 10:46:05", "instrumented" : 79, "covered" : 55,};
var merged_data = [];
